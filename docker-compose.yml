
services:
# Frontend service for CakePHP 5 application
# This service runs a CakePHP 5 application and is configured to use specific ports, environment variables, and volumes for persistent storage. 

  frontend:
    image: shinsenter/cakephp5
    # This image is a custom CakePHP 5 image that includes the necessary dependencies and configurations
    # for running a CakePHP 5 application.
    # The image is built from the Dockerfile in the current directory.
    # The image is based on the latest version of CakePHP 5.
    # The image is built with the necessary dependencies and configurations for running a CakePHP 5 application.
    # The image is built with the necessary dependencies and configurations for running a CakePHP
    container_name: WebAdaptors-CakePHP5
    environment:
      - TZ=America/Chicago
    ports:
      - 8110:80
      - 4445:443 # This port is used for HTTPS
      - 8111:8080 # This port is used for the CakePHP application
      - 3111:3000 # This port is used for the backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    volumes:
      - ${PWD}/frontend:/app:rw
      - ${PWD}/frontend/app/s6-overlay:/etc/s6-overlay:rw
      - ${PWD}/frontend/app/s6-overlay/s6-rc.d:/etc/s6-overlay/s6-rc.d:rw
      - app_data:/var/www/html:rw
      - app_data:/var/www/html/app:rw
      - app_data:/var/www/html/app/logs:rw
      - app_data:/var/www/html/app/tmp:rw
      - app_data:/var/www/html/app/public:rw
      - app_data:/var/www/html/app/config:rw
      - app_data:/var/www/html/app/vendor:rw
    restart: unless-stopped

# Database service for mariadb
# This service runs a MariaDB database and is configured to use specific environment variables, volumes for persistent storage, and health checks to ensure the database service is running properly.
  # The database is used by the CakePHP application and the backend service.
  # It is configured to use a specific user and password for security, and the database is set to be created on startup.
  # The database service is set to restart on failure with a maximum of 5 retries.
  db:
    image: mariadb:11.4-noble #LTS Long Time Support Until May 29, 2029.
    container_name: WebAdaptors-DB
    user: 1026:100
    hostname: webadapters-db
    environment:
      MYSQL_DATABASE: webadapters_db
      MYSQL_USER: robjects
      MYSQL_PASSWORD: assHIgai1!?
      MYSQL_ROOT_PASSWORD: rootpass
      TZ: America/Chicago
    volumes:
      - ${DB_DATA}:/var/lib/mysql:rw
    restart: on-failure:5

# Adminer service for database management
  # This service provides a web interface for managing the database and is configured to use specific ports and security options.
  adminer:
    image: adminer
    container_name: WebAdaptors-Adminer
    hostname: adminer:latest
    security_opt:
      - no-new-privileges:true
    ports:
      - 8232:8080
    volumes:
      - ${ADMINER_DATA}:/var/www/html:rw
    environment:
      - ADMINER_DEFAULT_SERVER=db
      - ADMINER_DEFAULT_DB=webadapters_db
      - ADMINER_DEFAULT_USER=robjects
      - ADMINER_DEFAULT_PASSWORD=assHIgai1!?
      - TZ=America/Chicago
    # Healthcheck to ensure the Adminer service is running
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    depends_on:
      - db
# Backend service for Node.js application

    # This service is used to manage the database and is configured to use specific environment variables, volumes for persistent storage, and health checks to ensure the Adminer service is running properly.
  backend:
    image: node:20
    container_name: WebAdaptors-Backend
    working_dir: /backend
    volumes:
      - ${BACKEND_DATA}:/app:rw
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=postgres://robjects:assHIgai1!?@db:5432/webadapters_db
      - REDIS_URL=redis://redis:6379
      - TZ=America/Chicago
    restart: on-failure:5

# redis service for caching
# This service is used by the backend to cache data and improve performance. It is configured to use specific environment variables, volumes for persistent storage, and health checks to ensure the Redis service is running properly.
  redis:
    image: redis
    hostname: WebAdaptors-redis
    container_name: WebAdaptors-REDIS
    healthcheck:
     test: ["CMD-SHELL", "redis-cli ping || exit 1"]
    volumes:
      - ${REDIS_DATA}:/data:rw
    environment:
      TZ: America/Chicago

  # jupyter:
  #   container_name: WebAdaptors-Jupyter
  #   image: jupyter/datascience-notebook:latest
  #   mem_limit: 3g
  #   cpu_shares: 768
  #   security_opt:
  #     - no-new-privileges:true
  #   volumes:
  #     - /volume1/docker/webadapters/jupyter:/home/jovyan/work:rw
  #   ports:
  #     - 10445:8888
  #   depends_on:
  #     - db
  #   environment:
  #     - JUPYTER_ENABLE_LAB=yes
  #     - JUPYTER_TOKEN=webadapters
  #     - TZ=America/Chicago
  #   restart: on-failure:5


# # Volumes for persistent storage
# volumes:
#   db_data:
#     driver: local
#     driver_opts:
#       device: /volume1/docker/webadapters/db
#       o: bind
#   cakephp_data:
#     driver: local
#     driver_opts:
#       device: /volume1/docker/webadapters/cakephp
#       o: bind
#   redis_data:
#     driver: local
#     driver_opts:
#       device: /volume1/docker/webadapters/redis
#       o: bind
#   adminer_data:
#     driver: local
#     driver_opts:
#       device: /volume1/docker/webadapters/adminer
#       o: bind


volumes:
  app_data:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/frontend/app
      o: bind
  db_data:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/db
      o: bind
  backend_data:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/backend
      o: bind
  redis_data:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/redis
      o: bind
  adminer_data:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/adminer
      o: bind