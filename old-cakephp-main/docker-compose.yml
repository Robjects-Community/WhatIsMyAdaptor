services:
  cakephp:
    image: shinsenter/cakephp5
    container_name: WebAdaptors-CakePHP5
    hostname: WebAdaptors-CakePHP5
    restart: unless-stopped
    environment:
      - TZ=America/Chicago
      # - APP_ENV=development
    ports:
      - 8323:80
      - 3888:3000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    volumes:
      - cakephp_data:/var/www/html:rw
      - cakephp_data:/app/data:rw
    depends_on:
      - db_mariadb


  # db_data:
  #   image: mysql:8.0
  #   environment:
  #     MYSQL_PORT: 3306
  #     MYSQL_HOST_AUTH_METHOD: trust
  #     MYSQL_ROOT_PASSWORD: rootpass
  #     MYSQL_DATABASE: webadapters_db
  #     MYSQL_USER: robjects
  #     MYSQL_PASSWORD: assHIgai1!?
  #     # MYSQL_ROOT_PASSWORD: rootpassword
  #     # MYSQL_DATABASE: cakephp
  #     # MYSQL_USER: cakephpuser
  #     # MYSQL_PASSWORD: cakephp_password
  #   volumes:
  #     - db_mysql:/var/lib/mysql:rw
  #   restart: on-failure:5
  #   container_name: WebAdaptors-MySQL
  #   hostname: WebAdaptors-MySQL
  #   ports:
  #     - 3311:3306

  db_mariadb:
    image: mariadb:11.4-noble
    container_name: WebAdaptors-DB
    hostname: webadapters-db
    environment:
      MARIADB_ROOT_PASSWORD: rootpass
      MARIADB_DATABASE: webadapters_db
      MARIADB_USER: robjects
      MARIADB_PASSWORD: assHIgai1!?
      MARIADB_HOST: db_mariadb
      MARIADB_PORT: 3306
      MARIADB_ALLOW_EMPTY_PASSWORD: "yes"
      MARIADB_ROOT_HOST: '%'
      MARIADB_INITDB_ARGS: "--character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci"
      MARIADB_CHARSET: utf8mb4
      MARIADB_COLLATION: utf8mb4_unicode_ci
      TZ: America/Chicago
    volumes:
      - db_mariadb:/var/lib/mysql:rw
    restart: on-failure:5

  # db_postgresql:
  #   container_name: WebAdaptors-PostgreSQL
  #   image: postgres
  #   mem_limit: 256m
  #   cpu_shares: 768
  #   healthcheck:
  #     test: ["CMD", "pg_isready", "-q", "-d", "marius_DB", "-U", "root"]
  #   environment:
  #     POSTGRES_USER: robjects
  #     POSTGRES_PASSWORD: assHIgai1!?
  #     POSTGRES_HOST: db_postgresql
  #     POSTGRES_PORT: 5432
      
  #     POSTGRES_HOST_AUTH_METHOD: trust
  #     POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.UTF-8"
  #     TZ: America/Chicago
  #     POSTGRES_DB: webadapters_db
  #   volumes:
  #     - db_postgresql:/var/lib/postgresql/data:rw
  #   ports:
  #     - 2665:5432
  #   restart: on-failure:5
  #   depends_on:
  #     - redis

  adminer:
    image: adminer:latest
    container_name: WebAdaptors-Adminer
    hostname: adminer:latest
    security_opt:
      - no-new-privileges:true
    user: 1026:100
    ports:
      - 8443:8080
    restart: on-failure:5
    environment:
      - ADMINER_DEFAULT_SERVER=db_postgresql
      - ADMINER_DEFAULT_SERVER_POSTGRES=db_postgresql
      - ADMINER_DEFAULT_SERVER_REDIS=redis
    volumes:
      - adminer_data:/var/www/html:rw

  redis:
    image: redis
    hostname: WebAdaptors-redis
    container_name: WebAdaptors-REDIS
    user: 1026:100
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping || exit 1"]
    volumes:
      - redis_data:/data:rw
    environment:
      TZ: America/Chicago

volumes:
  db_mysql:
    driver: local
    driver_opts:
      type: none
      device: ${DB_MYSQL_PATH:-/volume1/docker/webadapters/db_mysql}
      o: bind
  db_data:
    driver: local
    driver_opts:
      type: none
      device: ${DB_DATA_PATH:-/volume1/docker/webadapters/db_data}
      o: bind
  db_postgresql:
    driver: local
    driver_opts:
      type: none
      device: ${DB_POSTGRESQL_PATH:-/volume1/docker/webadapters/db_postgresql}
      o: bind
  db_mariadb:
    driver: local
    driver_opts:
      type: none
      device: ${DB_MARIADB_PATH:-/volume1/docker/webadapters/db_mariadb}
      o: bind
  cakephp_data:
    driver: local
    driver_opts:
      type: none
      device: ${CAKEPHP_DATA_PATH:-/volume1/docker/webadapters/cakephp}
      o: bind
  redis_data:
    driver: local
    driver_opts:
      type: none
      device: ${REDIS_DATA_PATH:-/volume1/docker/webadapters/redis}
      o: bind
  adminer_data:
    driver: local
    driver_opts:
      type: none
      device: ${ADMINER_DATA_PATH:-/volume1/docker/webadapters/adminer}
      o: bind
